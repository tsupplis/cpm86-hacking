;
; Licensed under the MIT license. See LICENSE file in the project root for details.
;

            title   'ATINIT - Start CP/M'

            cseg

            mov     cx,ds
            mov     es,cx
            call    cls
            call    print_cpm_ver
            mov     cx,0Ch
            int     0E0h
            sub     al,50H
            ja      hw_end
            call    print_hw
hw_end:
            lea     si, msg_rtc
            call    print_str

include atclock.a86

cls:
            push    ax
            push    bx
            push    cx
            mov     dx,27
            mov     cl,02h            
            int     0E0h    
            mov     dx,'E'
            mov     cl,02h            
            int     0E0h    
            pop     cx
            pop     bx
            pop     ax
            ret

print_hw:
            push    ax
            push    bx
            push    cx
            push    dx
            push    es
            push    si
            lea     si, msg_hw_hdr
            call    print_str  
            lea     si, msg_hw_mem
            call    print_str  
            int     12h
            mov     bx,10
            call    print_uint16
            lea     si, msg_hw_kb
            call    print_str  
            lea     si, msg_hw_87
            call    print_str  
            int     11h
 	        add	    ax,0040h
	        and	    ax,0fff3h
            push    ax
            and     al,2
            jz      no_87
            lea     si, msg_hw_yes
            jmp     done_87
no_87:
            lea     si, msg_hw_no
done_87:
            call    print_str  
            lea     si, msg_hw_flp
            call    print_str  
            pop     ax
            push    ax
            xor     ah,ah
            mov     cl,06h
            shr     al,cl
            and     al,07h
            mov     bx,10
            call    print_uint16
            lea     si, msg_nl
            call    print_str  
            lea     si, msg_hw_dsk
            call    print_str  
            mov     cx,0Ch
            int     0E0h
            cmp     ax,1041H
            jz      disk_dosplus
            call    disk_count
            jmp     disk_print
disk_dosplus:
            push    ds
            mov     cx,40h
            mov     bx,75h
            mov     ds,cx
            mov     ax,[bx]
            pop     ds
disk_print:
            mov     bx,10
            call    print_uint16
            lea     si, msg_nl
            call    print_str  
            lea     si, msg_hw_par
            call    print_str  
            pop     ax
            push    ax
            mov     cl,0Eh
            shr     ax,cl
            and     al,03h
            mov     bx,10
            call    print_uint16
            lea     si, msg_nl
            call    print_str  
            lea     si, msg_hw_ser
            call    print_str  
            pop     ax
            mov     cl,09h
            shr     ax,cl
            and     al,07h
            mov     bx,10
            call    print_uint16
            lea     si, msg_nl
            call    print_str  
            pop     si
            pop     es
            pop     dx
            pop     cx
            pop     bx
            pop     ax  
            ret

print_cpm_ver:
            push    si
            push    ax
            push    bx
            push    cx
            push    dx
            mov     cx,0Ch
            int     0E0h
            and     ah,04h
            jz      print_ver_base
            lea     si, msg_ver_cc
            call    print_str  
print_ver_base:
            lea     si, msg_ver_hdr
            call    print_str  
            xor     ah,ah
            mov     bx,16
            mov     dl,al
            mov     cl,4
            shr     al, cl
            and     al,0Fh
            call    print_uint16
            mov     al,'.'
            call    print_char
            xor     ah,ah
            mov     al,dl
            and     al,0Fh
            call    print_uint16
            lea     si, msg_nl
            call    print_str  
            pop     dx
            pop     cx
            pop     bx
            pop     ax  
            pop     si
            ret


include baselib.a86

             dseg

month_siz    db      31, 28, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31
month_day    dw      000,031,059,090,120,151,181,212,243,273,304,334
msg_interr   db      'AT BIOS interrupt error ...',13,10,0
msg_86err    db      'Not an AT class system ...',13,10,0
msg_rtc      db      'Date now: ',0
msg_ver_cc   db      'Concurrent ',0
msg_ver_hdr  db      'CP/M-86 Version ',0
msg_hw_hdr   db      'Hardware Configuration: ',13,10,0
msg_hw_mem   db      ' - Memory: ',0
msg_hw_87    db      ' - Math Coprocessor: ',0
msg_hw_flp   db      ' - Floppy Drive(s): ',0
msg_hw_dsk   db      ' - Hard Disk(s): ',0
msg_hw_par   db      ' - Parallel Port(s): ',0
msg_hw_ser   db      ' - Serial Port(s): ',0
msg_hw_yes   db      'Yes',13,10,0
msg_hw_no    db      'No',13,10,0
msg_hw_kb    db      'Kb',13,10,0
msg_nl       db      13,10,0
tm_buffer    rs      256
stamp_year   rw      1
stamp_hours  rb      1
stamp_mins   rb      1
stamp_secs   rb      1
             db      0

             end
